### IMPORTANT, THIS IMAGE CAN ONLY BE RUN IN LINUX DOCKER
### You will run into a segfault in mac
FROM python:3.11.6-slim-bookworm as base

# Install poetry
RUN pip install pipx
RUN python3 -m pipx ensurepath
RUN pipx install poetry
ENV PATH="/root/.local/bin:$PATH"
ENV PATH=".venv/bin/:$PATH"

# Dependencies to build llama-cpp
RUN apt update && apt install -y \
  libopenblas-dev\
  ninja-build\
  build-essential\
  pkg-config\
  wget

# https://python-poetry.org/docs/configuration/#virtualenvsin-project
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

FROM base as dependencies
WORKDIR /home/worker/app
COPY pyproject.toml poetry.lock ./

RUN poetry install --with local
RUN poetry install --with ui
# TODO check if this fixed docx problem:
# Optional install:
RUN poetry install docx2txt

# TODO what does line below do?
FROM base as app

ENV PYTHONUNBUFFERED=1
ENV PORT=8080
EXPOSE 8080

# Prepare a non-root user
RUN adduser --system worker

# TODO why was WORKDIR specified a second time?
# WORKDIR /home/worker/app

# Dir for matplotconfig
RUN mkdir -p .config/matplotlib; chown worker .config/matplotlib; chmod 770 .config/matplotlib
ENV MPLCONFIGDIR="/home/worker/app/.config/matplotlib"

RUN mkdir local_data; chown worker local_data
RUN mkdir -p models/cache; chown -R worker models; chmod -R 770 models
# TODO why would you copy .venv if at the top of the dockerfile you already do RUN poetry install ?....
COPY --chown=worker --from=dependencies /home/worker/app/.venv/ .venv
COPY --chown=worker private_gpt/ private_gpt
# TODO don't copy fern? is documentation only ... (check if fastapi doc page is still available)
COPY --chown=worker fern/ fern
COPY --chown=worker *.yaml *.md ./
COPY --chown=worker scripts/ scripts

ENV PYTHONPATH="$PYTHONPATH:/private_gpt/"

# download embedding model, LLM and tokenizer specified in settings.
# TODO copying again to fix certain problem, must be solvable in a more logic way (e.g. only chown?)
COPY --chown=worker pyproject.toml ./
# ENV TRANSFORMERS_CACHE="/home/worker/app/models/cache"
# TODO adjust script with --skip option to not re-download each container build
RUN poetry run python scripts/setup
RUN chown -R worker private_gpt

USER worker
ENTRYPOINT python -m private_gpt